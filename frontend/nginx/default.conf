# AWS ALB 환경에 최적화된 Nginx 설정
# ALB가 SSL Termination을 처리하고, EC2 인스턴스의 Nginx는 HTTP(80) 트래픽만 처리합니다.

# ALB가 전달하는 X-Forwarded-Proto 헤더를 통해 원본 프로토콜을 파악합니다.
map $http_x_forwarded_proto $original_scheme {
    default http;
    https   https;
}

# =====================================================================
# ALB 헬스체크 전용 서버 (Private IP 대응)
# =====================================================================
server {
    listen 80;
    server_name _ default;  # 모든 IP 주소 허용

    # 헬스체크만 허용, 다른 요청은 차단
    location = /health {
        access_log off;
        default_type text/plain;
        return 200 "OK";
    }

    # 다른 모든 요청은 메인 도메인으로 리다이렉트
    location / {
        return 301 https://hyungchul.com$request_uri;
    }
}


# =====================================================================
# 1. www.hyungchul.com -> hyungchul.com 리다이렉션
# =====================================================================
server {
    listen 80;
    server_name www.hyungchul.com;
    
    # 로그 설정 (디버깅용)
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # www를 non-www로 영구 리디렉션
    # ALB가 SSL Termination을 하므로 원본 프로토콜을 사용
    return 301 $original_scheme://hyungchul.com$request_uri;
}

# =====================================================================
# 2. 메인 애플리케이션 서버 (hyungchul.com)
# =====================================================================
server {
    listen 80;
    server_name hyungchul.com;
    
    # 웹 루트 디렉토리
    root /usr/share/nginx/html;
    index index.html index.htm;
    
    # 로그 설정
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # 보안 헤더 설정
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Gzip 압축 설정 (성능 최적화)
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/x-javascript
        application/xml
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # =====================================================================
    # 정적 파일 서빙 및 SPA 라우팅
    # =====================================================================
    location / {
        # SPA를 위한 설정 - 파일이 없으면 index.html로 fallback
        try_files $uri $uri/ /index.html;
        
        # 정적 자산 캐싱 설정
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # CORS 설정 (필요한 경우)
            add_header Access-Control-Allow-Origin "*";
        }
        
        # HTML 파일은 캐시하지 않음 (SPA 업데이트 반영)
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
    }
    
    # =====================================================================
    # 백엔드 API 프록시 설정
    # =====================================================================
    location /api/ {
        # 백엔드 서버로 프록시 (Docker Compose 서비스 이름 사용)
        proxy_pass http://backend:8080;
        
        # 원본 클라이언트 정보 헤더 설정
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # 프록시 타임아웃 설정
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 프록시 버퍼링 설정
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # 에러 페이지 처리
        proxy_intercept_errors on;
        
        # CORS 설정 (필요한 경우)
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With" always;
        
        # Preflight 요청 처리 (OPTIONS)
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain charset=UTF-8";
            add_header Content-Length 0;
            return 204;
        }
    }
    
    # =====================================================================
    # 헬스체크 엔드포인트 (ALB 대상그룹용)
    # =====================================================================
    location /health {
        default_type text/plain;
        return 200 "OK\n";
    }
    
    # =====================================================================
    # 로봇 및 사이트맵 (SEO 최적화)
    # =====================================================================
    location = /robots.txt {
        access_log off;
        log_not_found off;
    }
    
    location = /sitemap.xml {
        access_log off;
        log_not_found off;
    }
    
    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }
    
    # =====================================================================
    # 보안 설정
    # =====================================================================
    # 숨겨진 파일 접근 차단
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 백업 파일 접근 차단
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # =====================================================================
    # 에러 페이지 설정
    # =====================================================================
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# =====================================================================
# 3. 기본 서버 (잘못된 도메인 요청 차단)
# =====================================================================
server {
    listen 80 default_server;
    server_name _;
    
    # 로그 비활성화 (스팸 요청 방지)
    access_log off;
    error_log /dev/null crit;
    
    # 연결 종료 (444는 nginx 전용 상태 코드)
    return 444;
}