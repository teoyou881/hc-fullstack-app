services:
  # Spring Boot Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend_container
    ports:
      - "8080:8080"
    environment:
      # 환경변수 파일에서 값 가져오기
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}

      JWT_SECRET: ${JWT_SECRET}
      JWT_ACCESS_TOKEN_EXPIRATION_MS: ${JWT_ACCESS_TOKEN_EXPIRATION_MS}
      JWT_REFRESH_TOKEN_EXPIRATION_MS: ${JWT_REFRESH_TOKEN_EXPIRATION_MS}
      JWT_TOKEN_PREFIX: ${JWT_TOKEN_PREFIX}
      JWT_HEADER_STRING: ${JWT_HEADER_STRING}

      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}

      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app_network

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend_container
    ports:
      - "80:80"
    environment:
      VITE_ADMIN_URL: ${VITE_ADMIN_URL}
      VITE_USER_URL: ${VITE_USER_URL}
      VITE_APP_ROUTER_BASENAME: ${VITE_APP_ROUTER_BASENAME}
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app_network

networks:
  app_network:
    driver: bridge